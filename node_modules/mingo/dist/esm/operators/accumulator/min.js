<<<<<<< HEAD
<<<<<<< HEAD
import { compare, isNotNaN } from "../../util";
import { $push } from "./push";
const $min = (collection, expr, options) => {
  const nums = $push(collection, expr, options).filter(isNotNaN);
  const n = nums.reduce((acc, n2) => compare(n2, acc) <= 0 ? n2 : acc, Infinity);
  return n === Infinity ? void 0 : n;
=======
=======
>>>>>>> cfa17b8e4 (favorite)
import { assert, compare, isArray, isEmpty, isNil } from "../../util";
import { $push } from "./push";
const $min = (collection, expr, options) => {
  const items = $push(collection, expr, options);
  if (isEmpty(items)) return null;
  assert(isArray(items), "$min: input must resolve to array");
  let min = items[0];
  for (const n of items) {
    if (isNil(n) || isNaN(n)) continue;
    if (compare(n, min) <= 0) min = n;
  }
  return min;
<<<<<<< HEAD
>>>>>>> 7cb31df57 (se integro la edicion de las recetas)
=======
>>>>>>> cfa17b8e4 (favorite)
};
export {
  $min
};
