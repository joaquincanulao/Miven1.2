import { computeValue } from "../../../core";
<<<<<<< HEAD
<<<<<<< HEAD
import { assert, isArray, unique } from "../../../util";
const $setUnion = (obj, expr, options) => {
  const args = computeValue(obj, expr, null, options);
  assert(
    isArray(args) && args.length == 2 && args.every(isArray),
    "$setUnion: arguments must be arrays"
  );
  return unique(args[0].concat(args[1]), options?.hashFunction);
=======
=======
>>>>>>> cfa17b8e4 (favorite)
import { assert, flatten, isArray, isNil, unique } from "../../../util";
const $setUnion = (obj, expr, options) => {
  const args = computeValue(obj, expr, null, options);
  if (isNil(args)) return null;
  assert(isArray(args), "$setUnion operands must be arrays.");
  if (args.some(isNil)) return null;
  return unique(flatten(args), options?.hashFunction);
<<<<<<< HEAD
>>>>>>> 7cb31df57 (se integro la edicion de las recetas)
=======
>>>>>>> cfa17b8e4 (favorite)
};
export {
  $setUnion
};
