import { computeValue } from "../../../core";
<<<<<<< HEAD
<<<<<<< HEAD
import { assert, into, isArray, isNil } from "../../../util";
const $concatArrays = (obj, expr, options) => {
  const arr = computeValue(obj, expr, null, options);
  assert(isArray(arr), "$concatArrays must resolve to an array");
  if (arr.some(isNil))
    return null;
  return arr.reduce((acc, item) => into(acc, item), []);
=======
=======
>>>>>>> cfa17b8e4 (favorite)
import { assert, isArray, isNil } from "../../../util";
const $concatArrays = (obj, expr, options) => {
  const nArray = computeValue(obj, expr, null, options);
  assert(isArray(nArray), "$concatArrays: input must resolve to an array");
  let size = 0;
  for (const arr of nArray) {
    if (isNil(arr)) return null;
    size += arr.length;
  }
  const result = new Array(size);
  let i = 0;
  for (const arr of nArray) for (const item of arr) result[i++] = item;
  return result;
<<<<<<< HEAD
>>>>>>> 7cb31df57 (se integro la edicion de las recetas)
=======
>>>>>>> cfa17b8e4 (favorite)
};
export {
  $concatArrays
};
