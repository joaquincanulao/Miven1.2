import type * as ts from 'typescript';
interface DirectoryStructureHost {
    readDirectory?(path: string, extensions?: readonly string[], exclude?: readonly string[], include?: readonly string[], depth?: number): string[];
}
interface CachedDirectoryStructureHost extends DirectoryStructureHost {
    readDirectory(path: string, extensions?: readonly string[], exclude?: readonly string[], include?: readonly string[], depth?: number): string[];
}
interface WatchCompilerHostOfConfigFile<T extends ts.BuilderProgram> extends ts.WatchCompilerHostOfConfigFile<T> {
<<<<<<< HEAD
<<<<<<< HEAD
    onCachedDirectoryStructureHostCreate(host: CachedDirectoryStructureHost): void;
    extraFileExtensions?: readonly ts.FileExtensionInfo[];
}
export { WatchCompilerHostOfConfigFile };
=======
=======
>>>>>>> cfa17b8e4 (favorite)
    extraFileExtensions?: readonly ts.FileExtensionInfo[];
    onCachedDirectoryStructureHostCreate(host: CachedDirectoryStructureHost): void;
}
export type { WatchCompilerHostOfConfigFile };
<<<<<<< HEAD
>>>>>>> 7cb31df57 (se integro la edicion de las recetas)
=======
>>>>>>> cfa17b8e4 (favorite)
//# sourceMappingURL=WatchCompilerHostOfConfigFile.d.ts.map