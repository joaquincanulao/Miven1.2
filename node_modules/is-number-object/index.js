'use strict';

<<<<<<< HEAD
var numToStr = Number.prototype.toString;
var tryNumberObject = function tryNumberObject(value) {
	try {
		numToStr.call(value);
=======
var callBound = require('call-bind/callBound');

var $numToStr = callBound('Number.prototype.toString');

/** @type {import('.')} */
var tryNumberObject = function tryNumberObject(value) {
	try {
		$numToStr(value);
>>>>>>> 7cb31df57 (se integro la edicion de las recetas)
		return true;
	} catch (e) {
		return false;
	}
};
<<<<<<< HEAD
var toStr = Object.prototype.toString;
var numClass = '[object Number]';
var hasToStringTag = require('has-tostringtag/shams')();

=======
var $toString = callBound('Object.prototype.toString');
var numClass = '[object Number]';
var hasToStringTag = require('has-tostringtag/shams')();

/** @type {import('.')} */
>>>>>>> 7cb31df57 (se integro la edicion de las recetas)
module.exports = function isNumberObject(value) {
	if (typeof value === 'number') {
		return true;
	}
<<<<<<< HEAD
	if (typeof value !== 'object') {
		return false;
	}
	return hasToStringTag ? tryNumberObject(value) : toStr.call(value) === numClass;
=======
	if (!value || typeof value !== 'object') {
		return false;
	}
	return hasToStringTag ? tryNumberObject(value) : $toString(value) === numClass;
>>>>>>> 7cb31df57 (se integro la edicion de las recetas)
};
