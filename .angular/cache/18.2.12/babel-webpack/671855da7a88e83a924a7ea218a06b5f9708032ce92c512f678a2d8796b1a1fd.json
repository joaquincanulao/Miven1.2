{"ast":null,"code":"import _defineProperty from \"/home/jcanulao/Documentos/Miven1.0.0-main/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nvar _AppCheckModule;\nimport { ɵgetAllInstancesOf as _getAllInstancesOf, ɵAPP_CHECK_PROVIDER_NAME as _APP_CHECK_PROVIDER_NAME, ɵgetDefaultInstanceOf as _getDefaultInstanceOf, ɵAppCheckInstances as _AppCheckInstances, VERSION, ɵAngularFireSchedulers as _AngularFireSchedulers, ɵzoneWrap as _zoneWrap } from '@angular/fire';\nexport { ɵAppCheckInstances as AppCheckInstances } from '@angular/fire';\nimport { timer, from } from 'rxjs';\nimport { concatMap, distinct } from 'rxjs/operators';\nimport { isPlatformServer } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, isDevMode, Optional, PLATFORM_ID, NgModule, makeEnvironmentProviders, NgZone, Injector } from '@angular/core';\nimport { FirebaseApp, FirebaseApps } from '@angular/fire/app';\nimport { registerVersion } from 'firebase/app';\nimport { getLimitedUseToken as getLimitedUseToken$1, getToken as getToken$1, initializeAppCheck as initializeAppCheck$1, onTokenChanged as onTokenChanged$1, setTokenAutoRefreshEnabled as setTokenAutoRefreshEnabled$1 } from 'firebase/app-check';\nexport * from 'firebase/app-check';\nclass AppCheck {\n  constructor(appCheck) {\n    return appCheck;\n  }\n}\nconst appCheckInstance$ = timer(0, 300).pipe(concatMap(() => from(_getAllInstancesOf(_APP_CHECK_PROVIDER_NAME))), distinct());\nconst PROVIDED_APP_CHECK_INSTANCES = new InjectionToken('angularfire2.app-check-instances');\nfunction defaultAppCheckInstanceFactory(provided, defaultApp) {\n  const defaultAppCheck = _getDefaultInstanceOf(_APP_CHECK_PROVIDER_NAME, provided, defaultApp);\n  return defaultAppCheck && new AppCheck(defaultAppCheck);\n}\nconst LOCALHOSTS = ['localhost', '0.0.0.0', '127.0.0.1'];\nconst isLocalhost = typeof window !== 'undefined' && LOCALHOSTS.includes(window.location.hostname);\nfunction appCheckInstanceFactory(fn) {\n  return (zone, injector, platformId) => {\n    // Node should use admin token provider, browser devmode and localhost should use debug token\n    if (!isPlatformServer(platformId) && (isDevMode() || isLocalhost)) {\n      var _globalThis$FIREBASE_;\n      (_globalThis$FIREBASE_ = globalThis.FIREBASE_APPCHECK_DEBUG_TOKEN) !== null && _globalThis$FIREBASE_ !== void 0 ? _globalThis$FIREBASE_ : globalThis.FIREBASE_APPCHECK_DEBUG_TOKEN = true;\n    }\n    const appCheck = zone.runOutsideAngular(() => fn(injector));\n    return new AppCheck(appCheck);\n  };\n}\nconst APP_CHECK_INSTANCES_PROVIDER = {\n  provide: _AppCheckInstances,\n  deps: [[new Optional(), PROVIDED_APP_CHECK_INSTANCES]]\n};\nconst DEFAULT_APP_CHECK_INSTANCE_PROVIDER = {\n  provide: AppCheck,\n  useFactory: defaultAppCheckInstanceFactory,\n  deps: [[new Optional(), PROVIDED_APP_CHECK_INSTANCES], FirebaseApp, PLATFORM_ID]\n};\nclass AppCheckModule {\n  constructor() {\n    registerVersion('angularfire', VERSION.full, 'app-check');\n  }\n}\n_AppCheckModule = AppCheckModule;\n_defineProperty(AppCheckModule, \"\\u0275fac\", function _AppCheckModule_Factory(__ngFactoryType__) {\n  return new (__ngFactoryType__ || _AppCheckModule)();\n});\n_defineProperty(AppCheckModule, \"\\u0275mod\", /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: _AppCheckModule\n}));\n_defineProperty(AppCheckModule, \"\\u0275inj\", /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [DEFAULT_APP_CHECK_INSTANCE_PROVIDER, APP_CHECK_INSTANCES_PROVIDER]\n}));\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AppCheckModule, [{\n    type: NgModule,\n    args: [{\n      providers: [DEFAULT_APP_CHECK_INSTANCE_PROVIDER, APP_CHECK_INSTANCES_PROVIDER]\n    }]\n  }], () => [], null);\n})();\nfunction provideAppCheck(fn, ...deps) {\n  registerVersion('angularfire', VERSION.full, 'app-check');\n  return makeEnvironmentProviders([DEFAULT_APP_CHECK_INSTANCE_PROVIDER, APP_CHECK_INSTANCES_PROVIDER, {\n    provide: PROVIDED_APP_CHECK_INSTANCES,\n    useFactory: appCheckInstanceFactory(fn),\n    multi: true,\n    deps: [NgZone, Injector, PLATFORM_ID, _AngularFireSchedulers, FirebaseApps, ...deps]\n  }]);\n}\n\n// DO NOT MODIFY, this file is autogenerated by tools/build.ts\nconst getLimitedUseToken = _zoneWrap(getLimitedUseToken$1, true);\nconst getToken = _zoneWrap(getToken$1, true);\nconst initializeAppCheck = _zoneWrap(initializeAppCheck$1, true);\nconst onTokenChanged = _zoneWrap(onTokenChanged$1, true);\nconst setTokenAutoRefreshEnabled = _zoneWrap(setTokenAutoRefreshEnabled$1, true);\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AppCheck, AppCheckModule, appCheckInstance$, getLimitedUseToken, getToken, initializeAppCheck, onTokenChanged, provideAppCheck, setTokenAutoRefreshEnabled };","map":{"version":3,"names":["ɵgetAllInstancesOf","_getAllInstancesOf","ɵAPP_CHECK_PROVIDER_NAME","_APP_CHECK_PROVIDER_NAME","ɵgetDefaultInstanceOf","_getDefaultInstanceOf","ɵAppCheckInstances","_AppCheckInstances","VERSION","ɵAngularFireSchedulers","_AngularFireSchedulers","ɵzoneWrap","_zoneWrap","AppCheckInstances","timer","from","concatMap","distinct","isPlatformServer","i0","InjectionToken","isDevMode","Optional","PLATFORM_ID","NgModule","makeEnvironmentProviders","NgZone","Injector","FirebaseApp","FirebaseApps","registerVersion","getLimitedUseToken","getLimitedUseToken$1","getToken","getToken$1","initializeAppCheck","initializeAppCheck$1","onTokenChanged","onTokenChanged$1","setTokenAutoRefreshEnabled","setTokenAutoRefreshEnabled$1","AppCheck","constructor","appCheck","appCheckInstance$","pipe","PROVIDED_APP_CHECK_INSTANCES","defaultAppCheckInstanceFactory","provided","defaultApp","defaultAppCheck","LOCALHOSTS","isLocalhost","window","includes","location","hostname","appCheckInstanceFactory","fn","zone","injector","platformId","_globalThis$FIREBASE_","globalThis","FIREBASE_APPCHECK_DEBUG_TOKEN","runOutsideAngular","APP_CHECK_INSTANCES_PROVIDER","provide","deps","DEFAULT_APP_CHECK_INSTANCE_PROVIDER","useFactory","AppCheckModule","full","_AppCheckModule","_defineProperty","_AppCheckModule_Factory","__ngFactoryType__","ɵɵdefineNgModule","type","ɵɵdefineInjector","providers","ngDevMode","ɵsetClassMetadata","args","provideAppCheck","multi"],"sources":["/home/jcanulao/Documentos/Miven1.0.0-main/node_modules/@angular/fire/fesm2022/angular-fire-app-check.mjs"],"sourcesContent":["import { ɵgetAllInstancesOf as _getAllInstancesOf, ɵAPP_CHECK_PROVIDER_NAME as _APP_CHECK_PROVIDER_NAME, ɵgetDefaultInstanceOf as _getDefaultInstanceOf, ɵAppCheckInstances as _AppCheckInstances, VERSION, ɵAngularFireSchedulers as _AngularFireSchedulers, ɵzoneWrap as _zoneWrap } from '@angular/fire';\nexport { ɵAppCheckInstances as AppCheckInstances } from '@angular/fire';\nimport { timer, from } from 'rxjs';\nimport { concatMap, distinct } from 'rxjs/operators';\nimport { isPlatformServer } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, isDevMode, Optional, PLATFORM_ID, NgModule, makeEnvironmentProviders, NgZone, Injector } from '@angular/core';\nimport { FirebaseApp, FirebaseApps } from '@angular/fire/app';\nimport { registerVersion } from 'firebase/app';\nimport { getLimitedUseToken as getLimitedUseToken$1, getToken as getToken$1, initializeAppCheck as initializeAppCheck$1, onTokenChanged as onTokenChanged$1, setTokenAutoRefreshEnabled as setTokenAutoRefreshEnabled$1 } from 'firebase/app-check';\nexport * from 'firebase/app-check';\n\nclass AppCheck {\n    constructor(appCheck) {\n        return appCheck;\n    }\n}\nconst appCheckInstance$ = timer(0, 300).pipe(concatMap(() => from(_getAllInstancesOf(_APP_CHECK_PROVIDER_NAME))), distinct());\n\nconst PROVIDED_APP_CHECK_INSTANCES = new InjectionToken('angularfire2.app-check-instances');\nfunction defaultAppCheckInstanceFactory(provided, defaultApp) {\n    const defaultAppCheck = _getDefaultInstanceOf(_APP_CHECK_PROVIDER_NAME, provided, defaultApp);\n    return defaultAppCheck && new AppCheck(defaultAppCheck);\n}\nconst LOCALHOSTS = ['localhost', '0.0.0.0', '127.0.0.1'];\nconst isLocalhost = typeof window !== 'undefined' && LOCALHOSTS.includes(window.location.hostname);\nfunction appCheckInstanceFactory(fn) {\n    return (zone, injector, platformId) => {\n        // Node should use admin token provider, browser devmode and localhost should use debug token\n        if (!isPlatformServer(platformId) && (isDevMode() || isLocalhost)) {\n            globalThis.FIREBASE_APPCHECK_DEBUG_TOKEN ??= true;\n        }\n        const appCheck = zone.runOutsideAngular(() => fn(injector));\n        return new AppCheck(appCheck);\n    };\n}\nconst APP_CHECK_INSTANCES_PROVIDER = {\n    provide: _AppCheckInstances,\n    deps: [\n        [new Optional(), PROVIDED_APP_CHECK_INSTANCES],\n    ]\n};\nconst DEFAULT_APP_CHECK_INSTANCE_PROVIDER = {\n    provide: AppCheck,\n    useFactory: defaultAppCheckInstanceFactory,\n    deps: [\n        [new Optional(), PROVIDED_APP_CHECK_INSTANCES],\n        FirebaseApp,\n        PLATFORM_ID,\n    ]\n};\nclass AppCheckModule {\n    constructor() {\n        registerVersion('angularfire', VERSION.full, 'app-check');\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.0\", ngImport: i0, type: AppCheckModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"18.0.0\", ngImport: i0, type: AppCheckModule });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"18.0.0\", ngImport: i0, type: AppCheckModule, providers: [\n            DEFAULT_APP_CHECK_INSTANCE_PROVIDER,\n            APP_CHECK_INSTANCES_PROVIDER,\n        ] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.0\", ngImport: i0, type: AppCheckModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    providers: [\n                        DEFAULT_APP_CHECK_INSTANCE_PROVIDER,\n                        APP_CHECK_INSTANCES_PROVIDER,\n                    ]\n                }]\n        }], ctorParameters: () => [] });\nfunction provideAppCheck(fn, ...deps) {\n    registerVersion('angularfire', VERSION.full, 'app-check');\n    return makeEnvironmentProviders([\n        DEFAULT_APP_CHECK_INSTANCE_PROVIDER,\n        APP_CHECK_INSTANCES_PROVIDER,\n        {\n            provide: PROVIDED_APP_CHECK_INSTANCES,\n            useFactory: appCheckInstanceFactory(fn),\n            multi: true,\n            deps: [\n                NgZone,\n                Injector,\n                PLATFORM_ID,\n                _AngularFireSchedulers,\n                FirebaseApps,\n                ...deps,\n            ]\n        }\n    ]);\n}\n\n// DO NOT MODIFY, this file is autogenerated by tools/build.ts\nconst getLimitedUseToken = _zoneWrap(getLimitedUseToken$1, true);\nconst getToken = _zoneWrap(getToken$1, true);\nconst initializeAppCheck = _zoneWrap(initializeAppCheck$1, true);\nconst onTokenChanged = _zoneWrap(onTokenChanged$1, true);\nconst setTokenAutoRefreshEnabled = _zoneWrap(setTokenAutoRefreshEnabled$1, true);\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AppCheck, AppCheckModule, appCheckInstance$, getLimitedUseToken, getToken, initializeAppCheck, onTokenChanged, provideAppCheck, setTokenAutoRefreshEnabled };\n"],"mappings":";;AAAA,SAASA,kBAAkB,IAAIC,kBAAkB,EAAEC,wBAAwB,IAAIC,wBAAwB,EAAEC,qBAAqB,IAAIC,qBAAqB,EAAEC,kBAAkB,IAAIC,kBAAkB,EAAEC,OAAO,EAAEC,sBAAsB,IAAIC,sBAAsB,EAAEC,SAAS,IAAIC,SAAS,QAAQ,eAAe;AAC3S,SAASN,kBAAkB,IAAIO,iBAAiB,QAAQ,eAAe;AACvE,SAASC,KAAK,EAAEC,IAAI,QAAQ,MAAM;AAClC,SAASC,SAAS,EAAEC,QAAQ,QAAQ,gBAAgB;AACpD,SAASC,gBAAgB,QAAQ,iBAAiB;AAClD,OAAO,KAAKC,EAAE,MAAM,eAAe;AACnC,SAASC,cAAc,EAAEC,SAAS,EAAEC,QAAQ,EAAEC,WAAW,EAAEC,QAAQ,EAAEC,wBAAwB,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,eAAe;AACtI,SAASC,WAAW,EAAEC,YAAY,QAAQ,mBAAmB;AAC7D,SAASC,eAAe,QAAQ,cAAc;AAC9C,SAASC,kBAAkB,IAAIC,oBAAoB,EAAEC,QAAQ,IAAIC,UAAU,EAAEC,kBAAkB,IAAIC,oBAAoB,EAAEC,cAAc,IAAIC,gBAAgB,EAAEC,0BAA0B,IAAIC,4BAA4B,QAAQ,oBAAoB;AACnP,cAAc,oBAAoB;AAElC,MAAMC,QAAQ,CAAC;EACXC,WAAWA,CAACC,QAAQ,EAAE;IAClB,OAAOA,QAAQ;EACnB;AACJ;AACA,MAAMC,iBAAiB,GAAG9B,KAAK,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC+B,IAAI,CAAC7B,SAAS,CAAC,MAAMD,IAAI,CAACd,kBAAkB,CAACE,wBAAwB,CAAC,CAAC,CAAC,EAAEc,QAAQ,CAAC,CAAC,CAAC;AAE7H,MAAM6B,4BAA4B,GAAG,IAAI1B,cAAc,CAAC,kCAAkC,CAAC;AAC3F,SAAS2B,8BAA8BA,CAACC,QAAQ,EAAEC,UAAU,EAAE;EAC1D,MAAMC,eAAe,GAAG7C,qBAAqB,CAACF,wBAAwB,EAAE6C,QAAQ,EAAEC,UAAU,CAAC;EAC7F,OAAOC,eAAe,IAAI,IAAIT,QAAQ,CAACS,eAAe,CAAC;AAC3D;AACA,MAAMC,UAAU,GAAG,CAAC,WAAW,EAAE,SAAS,EAAE,WAAW,CAAC;AACxD,MAAMC,WAAW,GAAG,OAAOC,MAAM,KAAK,WAAW,IAAIF,UAAU,CAACG,QAAQ,CAACD,MAAM,CAACE,QAAQ,CAACC,QAAQ,CAAC;AAClG,SAASC,uBAAuBA,CAACC,EAAE,EAAE;EACjC,OAAO,CAACC,IAAI,EAAEC,QAAQ,EAAEC,UAAU,KAAK;IACnC;IACA,IAAI,CAAC3C,gBAAgB,CAAC2C,UAAU,CAAC,KAAKxC,SAAS,CAAC,CAAC,IAAI+B,WAAW,CAAC,EAAE;MAAA,IAAAU,qBAAA;MAC/D,CAAAA,qBAAA,GAAAC,UAAU,CAACC,6BAA6B,cAAAF,qBAAA,cAAAA,qBAAA,GAAxCC,UAAU,CAACC,6BAA6B,GAAK,IAAI;IACrD;IACA,MAAMrB,QAAQ,GAAGgB,IAAI,CAACM,iBAAiB,CAAC,MAAMP,EAAE,CAACE,QAAQ,CAAC,CAAC;IAC3D,OAAO,IAAInB,QAAQ,CAACE,QAAQ,CAAC;EACjC,CAAC;AACL;AACA,MAAMuB,4BAA4B,GAAG;EACjCC,OAAO,EAAE5D,kBAAkB;EAC3B6D,IAAI,EAAE,CACF,CAAC,IAAI9C,QAAQ,CAAC,CAAC,EAAEwB,4BAA4B,CAAC;AAEtD,CAAC;AACD,MAAMuB,mCAAmC,GAAG;EACxCF,OAAO,EAAE1B,QAAQ;EACjB6B,UAAU,EAAEvB,8BAA8B;EAC1CqB,IAAI,EAAE,CACF,CAAC,IAAI9C,QAAQ,CAAC,CAAC,EAAEwB,4BAA4B,CAAC,EAC9ClB,WAAW,EACXL,WAAW;AAEnB,CAAC;AACD,MAAMgD,cAAc,CAAC;EACjB7B,WAAWA,CAAA,EAAG;IACVZ,eAAe,CAAC,aAAa,EAAEtB,OAAO,CAACgE,IAAI,EAAE,WAAW,CAAC;EAC7D;AAOJ;AAACC,eAAA,GAVKF,cAAc;AAAAG,eAAA,CAAdH,cAAc,wBAAAI,wBAAAC,iBAAA;EAAA,YAAAA,iBAAA,IAImFL,eAAc;AAAA;AAAAG,eAAA,CAJ/GH,cAAc,8BAW6DpD,EAAE,CAAA0D,gBAAA;EAAAC,IAAA,EANqBP;AAAc;AAAAG,eAAA,CALhHH,cAAc,8BAW6DpD,EAAE,CAAA4D,gBAAA;EAAAC,SAAA,EALgD,CACvHX,mCAAmC,EACnCH,4BAA4B;AAC/B;AAET;EAAA,QAAAe,SAAA,oBAAAA,SAAA,KAAiF9D,EAAE,CAAA+D,iBAAA,CAAQX,cAAc,EAAc,CAAC;IAC5GO,IAAI,EAAEtD,QAAQ;IACd2D,IAAI,EAAE,CAAC;MACCH,SAAS,EAAE,CACPX,mCAAmC,EACnCH,4BAA4B;IAEpC,CAAC;EACT,CAAC,CAAC,EAAkB,MAAM,EAAE;AAAA;AACpC,SAASkB,eAAeA,CAAC1B,EAAE,EAAE,GAAGU,IAAI,EAAE;EAClCtC,eAAe,CAAC,aAAa,EAAEtB,OAAO,CAACgE,IAAI,EAAE,WAAW,CAAC;EACzD,OAAO/C,wBAAwB,CAAC,CAC5B4C,mCAAmC,EACnCH,4BAA4B,EAC5B;IACIC,OAAO,EAAErB,4BAA4B;IACrCwB,UAAU,EAAEb,uBAAuB,CAACC,EAAE,CAAC;IACvC2B,KAAK,EAAE,IAAI;IACXjB,IAAI,EAAE,CACF1C,MAAM,EACNC,QAAQ,EACRJ,WAAW,EACXb,sBAAsB,EACtBmB,YAAY,EACZ,GAAGuC,IAAI;EAEf,CAAC,CACJ,CAAC;AACN;;AAEA;AACA,MAAMrC,kBAAkB,GAAGnB,SAAS,CAACoB,oBAAoB,EAAE,IAAI,CAAC;AAChE,MAAMC,QAAQ,GAAGrB,SAAS,CAACsB,UAAU,EAAE,IAAI,CAAC;AAC5C,MAAMC,kBAAkB,GAAGvB,SAAS,CAACwB,oBAAoB,EAAE,IAAI,CAAC;AAChE,MAAMC,cAAc,GAAGzB,SAAS,CAAC0B,gBAAgB,EAAE,IAAI,CAAC;AACxD,MAAMC,0BAA0B,GAAG3B,SAAS,CAAC4B,4BAA4B,EAAE,IAAI,CAAC;;AAEhF;AACA;AACA;;AAEA,SAASC,QAAQ,EAAE8B,cAAc,EAAE3B,iBAAiB,EAAEb,kBAAkB,EAAEE,QAAQ,EAAEE,kBAAkB,EAAEE,cAAc,EAAE+C,eAAe,EAAE7C,0BAA0B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}