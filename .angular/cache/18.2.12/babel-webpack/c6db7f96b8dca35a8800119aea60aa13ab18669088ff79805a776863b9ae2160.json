{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/compat/auth\";\nimport * as i2 from \"@angular/fire/compat/firestore\";\nimport * as i3 from \"../../services/recipe.service\";\nimport * as i4 from \"../../services/inventory.service\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@ionic/angular\";\nimport * as i7 from \"@angular/forms\";\nfunction FavoritesComponent_ion_card_21_ion_img_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"ion-img\", 12);\n  }\n  if (rf & 2) {\n    const recipe_r2 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"src\", recipe_r2.imageUrl);\n  }\n}\nfunction FavoritesComponent_ion_card_21_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-card\");\n    i0.ɵɵtemplate(1, FavoritesComponent_ion_card_21_ion_img_1_Template, 1, 1, \"ion-img\", 8);\n    i0.ɵɵelementStart(2, \"ion-card-header\")(3, \"ion-card-title\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"ion-card-content\");\n    i0.ɵɵtext(6);\n    i0.ɵɵpipe(7, \"slice\");\n    i0.ɵɵelementStart(8, \"ion-button\", 9);\n    i0.ɵɵlistener(\"click\", function FavoritesComponent_ion_card_21_Template_ion_button_click_8_listener() {\n      const recipe_r2 = i0.ɵɵrestoreView(_r1).$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.openRecipeModal(recipe_r2));\n    });\n    i0.ɵɵtext(9, \"Ver m\\u00E1s\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"ion-button\", 10);\n    i0.ɵɵlistener(\"click\", function FavoritesComponent_ion_card_21_Template_ion_button_click_10_listener() {\n      const recipe_r2 = i0.ɵɵrestoreView(_r1).$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.removeFromFavorites(recipe_r2.id));\n    });\n    i0.ɵɵelement(11, \"ion-icon\", 11);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const recipe_r2 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", recipe_r2.imageUrl);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(recipe_r2.titulo);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind3(7, 5, recipe_r2.descripcion, 0, 100), \"... \");\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"name\", ctx_r2.isFavorite(recipe_r2.id) ? \"heart\" : \"heart-outline\")(\"color\", ctx_r2.isFavorite(recipe_r2.id) ? \"danger\" : \"medium\");\n  }\n}\nfunction FavoritesComponent_ng_template_23_ion_img_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"ion-img\", 12);\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"src\", ctx_r2.selectedRecipe == null ? null : ctx_r2.selectedRecipe.imageUrl);\n  }\n}\nfunction FavoritesComponent_ng_template_23_ion_item_14_ion_icon_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"ion-icon\", 17);\n  }\n}\nfunction FavoritesComponent_ng_template_23_ion_item_14_ion_icon_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"ion-icon\", 18);\n  }\n}\nfunction FavoritesComponent_ng_template_23_ion_item_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-item\");\n    i0.ɵɵtext(1);\n    i0.ɵɵtemplate(2, FavoritesComponent_ng_template_23_ion_item_14_ion_icon_2_Template, 1, 0, \"ion-icon\", 15)(3, FavoritesComponent_ng_template_23_ion_item_14_ion_icon_3_Template, 1, 0, \"ion-icon\", 16);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ingredient_r5 = ctx.$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ingredient_r5.name, \" \");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ingredient_r5.inInventory);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ingredient_r5.inInventory);\n  }\n}\nfunction FavoritesComponent_ng_template_23_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-header\")(1, \"ion-toolbar\")(2, \"ion-title\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"ion-buttons\", 13)(5, \"ion-button\", 14);\n    i0.ɵɵlistener(\"click\", function FavoritesComponent_ng_template_23_Template_ion_button_click_5_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.closeModal());\n    });\n    i0.ɵɵtext(6, \"Cerrar\");\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(7, \"ion-content\");\n    i0.ɵɵtemplate(8, FavoritesComponent_ng_template_23_ion_img_8_Template, 1, 1, \"ion-img\", 8);\n    i0.ɵɵelementStart(9, \"ion-list\")(10, \"ion-item\")(11, \"ion-label\")(12, \"h2\");\n    i0.ɵɵtext(13);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵtemplate(14, FavoritesComponent_ng_template_23_ion_item_14_Template, 4, 3, \"ion-item\", 6);\n    i0.ɵɵelementStart(15, \"ion-item\")(16, \"ion-label\")(17, \"h2\");\n    i0.ɵɵtext(18);\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(19, \"ion-button\", 14);\n    i0.ɵɵlistener(\"click\", function FavoritesComponent_ng_template_23_Template_ion_button_click_19_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.closeModal());\n    });\n    i0.ɵɵtext(20, \"Cerrar\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r2.selectedRecipe == null ? null : ctx_r2.selectedRecipe.titulo);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.selectedRecipe == null ? null : ctx_r2.selectedRecipe.imageUrl);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(ctx_r2.selectedRecipe == null ? null : ctx_r2.selectedRecipe.titulo);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.availableIngredients);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r2.selectedRecipe == null ? null : ctx_r2.selectedRecipe.descripcion);\n  }\n}\nexport let FavoritesComponent = /*#__PURE__*/(() => {\n  var _FavoritesComponent;\n  class FavoritesComponent {\n    constructor(auth, firestore, recipeService, inventoryService) {\n      this.auth = auth;\n      this.firestore = firestore;\n      this.recipeService = recipeService;\n      this.inventoryService = inventoryService;\n      this.userId = null;\n      this.favorites = []; // Aquí se almacenan todas las recetas favoritas\n      this.filteredFavorites = []; // Recetas filtradas por categoría\n      this.isModalOpen = false;\n      this.selectedRecipe = null;\n      this.selectedCategory = 'desayuno'; // Categoría seleccionada por defecto\n      this.isAuthenticated = false;\n      this.availableIngredients = [];\n      console.log(' en cosntruct');\n    }\n    ngOnInit() {\n      this.auth.authState.subscribe(user => {\n        this.isAuthenticated = !!user;\n        console.log(' isAuthenticated subscribe :: ', this.isAuthenticated);\n        if (this.isAuthenticated) {\n          if (user && user.uid) {\n            this.userId = user.uid;\n            this.filterFavorites();\n          }\n        }\n      });\n      // console.log(' isAuthenticated :: ', this.isAuthenticated);\n    }\n    /*\n    ngOnInit() {\n    this.auth.authState.subscribe(user => {\n     console.log(' en subscribe');\n     if (user && user.uid) {\n       this.userId = user.uid;\n         \n     }\n    });\n    this.filterFavorites();\n    }\n    /* */\n    // Método para filtrar las recetas según la categoría seleccionada\n    filterFavorites() {\n      console.log(' this === ', this.userId);\n      if (this.userId) {\n        this.filteredFavorites = [];\n        const favoritos = this.firestore.collection('usuarios').doc(this.userId).collection('favoritos', ref => ref.where('category', '==', this.selectedCategory));\n        favoritos.get().forEach(querySnapshot => {\n          querySnapshot.forEach(doc => {\n            const datos = doc.data();\n            console.log('datos  ID :: ', doc.id);\n            this.firestore.collection('recetas').doc(datos['recipeId']).get().forEach(rec => {\n              const d = rec.data();\n              d.id = doc.id;\n              this.filteredFavorites.push(d);\n              // console.log('receta :: ', d)\n            });\n          });\n          // console.log('Favoritos filtrados:', this.filteredFavorites);\n        });\n      }\n    }\n    // Método para abrir el modal de detalles de la receta\n    openRecipeModal(recipe) {\n      this.selectedRecipe = recipe;\n      this.checkIngredientsAvailability(recipe.ingredientes);\n      this.isModalOpen = true;\n    }\n    // Método para cerrar el modal\n    closeModal() {\n      this.isModalOpen = false;\n      this.selectedRecipe = null;\n    }\n    removeFromFavorites(recipeId) {\n      console.log('recipeId :: ', recipeId);\n      if (this.userId) {\n        //console.error('El ID del usuario no está disponible');\n        //return;\n        const favoritos = this.firestore.collection('usuarios').doc(this.userId).collection('favoritos').doc(recipeId).delete();\n        this.filterFavorites();\n      }\n      /*\n      this.firestore\n        .collection('usuarios')\n        .doc(this.userId)\n        .collection('favoritos', ref => ref.where('category', '==', this.selectedCategory))\n        .get()\n        .subscribe(snapshot => {\n          \n          if (!snapshot.empty) {\n            snapshot.forEach(doc => {\n              console.log('Documento encontrado en favoritos:', doc.id);\n              if (!this.userId) return;\n              this.firestore\n                .collection('usuarios')\n                .doc(this.userId)\n                .collection('favoritos')\n                .doc(doc.id)\n                .delete()\n                .then(() => {\n                  console.log('Receta eliminada de favoritos');\n                  this.filterFavorites();\n                })\n                .catch(error => {\n                  console.error('Error al eliminar receta de favoritos:', error);\n                });\n            });\n          } else {\n            console.error('No se encontró la receta en favoritos');\n          }\n        });\n        /* */\n    }\n    checkIngredientsAvailability(recipeIngredients) {\n      if (this.userId) {\n        this.inventoryService.getInventory(this.userId).subscribe(inventory => {\n          this.availableIngredients = recipeIngredients.map(ingredient => {\n            return {\n              name: ingredient,\n              inInventory: inventory.some(item => item.nombre.toLowerCase() === ingredient.toLowerCase())\n            };\n          });\n        });\n      }\n    }\n    isFavorite(recipeId) {\n      return this.favorites.some(fav => fav.recipeId === recipeId);\n    }\n  }\n  _FavoritesComponent = FavoritesComponent;\n  _FavoritesComponent.ɵfac = function FavoritesComponent_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || _FavoritesComponent)(i0.ɵɵdirectiveInject(i1.AngularFireAuth), i0.ɵɵdirectiveInject(i2.AngularFirestore), i0.ɵɵdirectiveInject(i3.RecipeService), i0.ɵɵdirectiveInject(i4.InventoryService));\n  };\n  _FavoritesComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: _FavoritesComponent,\n    selectors: [[\"app-favorites\"]],\n    decls: 24,\n    vars: 3,\n    consts: [[\"slot\", \"start\"], [3, \"ngModelChange\", \"ionChange\", \"ngModel\"], [\"value\", \"desayuno\"], [\"value\", \"almuerzo\"], [\"value\", \"cena\"], [\"value\", \"postre\"], [4, \"ngFor\", \"ngForOf\"], [3, \"didDismiss\", \"isOpen\"], [\"alt\", \"Imagen de la receta\", 3, \"src\", 4, \"ngIf\"], [\"fill\", \"clear\", 3, \"click\"], [\"fill\", \"clear\", \"color\", \"danger\", 3, \"click\"], [3, \"name\", \"color\"], [\"alt\", \"Imagen de la receta\", 3, \"src\"], [\"slot\", \"end\"], [3, \"click\"], [\"name\", \"checkmark-circle\", \"color\", \"success\", 4, \"ngIf\"], [\"name\", \"close-circle\", \"color\", \"danger\", 4, \"ngIf\"], [\"name\", \"checkmark-circle\", \"color\", \"success\"], [\"name\", \"close-circle\", \"color\", \"danger\"]],\n    template: function FavoritesComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ion-header\")(1, \"ion-buttons\", 0);\n        i0.ɵɵelement(2, \"ion-menu-button\");\n        i0.ɵɵelementStart(3, \"ion-title\");\n        i0.ɵɵtext(4, \"Recetas Favoritas\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(5, \"ion-toolbar\")(6, \"ion-segment\", 1);\n        i0.ɵɵtwoWayListener(\"ngModelChange\", function FavoritesComponent_Template_ion_segment_ngModelChange_6_listener($event) {\n          i0.ɵɵtwoWayBindingSet(ctx.selectedCategory, $event) || (ctx.selectedCategory = $event);\n          return $event;\n        });\n        i0.ɵɵlistener(\"ionChange\", function FavoritesComponent_Template_ion_segment_ionChange_6_listener() {\n          return ctx.filterFavorites();\n        });\n        i0.ɵɵelementStart(7, \"ion-segment-button\", 2)(8, \"ion-label\");\n        i0.ɵɵtext(9, \"Desayuno\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(10, \"ion-segment-button\", 3)(11, \"ion-label\");\n        i0.ɵɵtext(12, \"Almuerzo\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(13, \"ion-segment-button\", 4)(14, \"ion-label\");\n        i0.ɵɵtext(15, \"Cena\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(16, \"ion-segment-button\", 5)(17, \"ion-label\");\n        i0.ɵɵtext(18, \"Postre\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(19, \"ion-content\")(20, \"ion-list\");\n        i0.ɵɵtemplate(21, FavoritesComponent_ion_card_21_Template, 12, 9, \"ion-card\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"ion-modal\", 7);\n        i0.ɵɵlistener(\"didDismiss\", function FavoritesComponent_Template_ion_modal_didDismiss_22_listener() {\n          return ctx.closeModal();\n        });\n        i0.ɵɵtemplate(23, FavoritesComponent_ng_template_23_Template, 21, 5, \"ng-template\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵtwoWayProperty(\"ngModel\", ctx.selectedCategory);\n        i0.ɵɵadvance(15);\n        i0.ɵɵproperty(\"ngForOf\", ctx.filteredFavorites);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"isOpen\", ctx.isModalOpen);\n      }\n    },\n    dependencies: [i5.NgForOf, i5.NgIf, i6.IonButton, i6.IonButtons, i6.IonCard, i6.IonCardContent, i6.IonCardHeader, i6.IonCardTitle, i6.IonContent, i6.IonHeader, i6.IonIcon, i6.IonImg, i6.IonItem, i6.IonLabel, i6.IonList, i6.IonMenuButton, i6.IonSegment, i6.IonSegmentButton, i6.IonTitle, i6.IonToolbar, i6.IonModal, i6.SelectValueAccessor, i7.NgControlStatus, i7.NgModel, i5.SlicePipe]\n  });\n  return FavoritesComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}