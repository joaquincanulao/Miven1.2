{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet FavoritesComponent = class FavoritesComponent {\n  constructor(auth, firestore, recipeService, inventoryService, router) {\n    this.auth = auth;\n    this.firestore = firestore;\n    this.recipeService = recipeService;\n    this.inventoryService = inventoryService;\n    this.router = router;\n    this.userId = null;\n    this.favorites = []; // Aquí se almacenan todas las recetas favoritas\n    this.filteredFavorites = []; // Recetas filtradas por categoría\n    this.isModalOpen = false;\n    this.selectedRecipe = null;\n    this.selectedCategory = 'desayuno'; // Categoría seleccionada por defecto\n    this.isAuthenticated = false;\n    this.availableIngredients = [];\n    console.log('en construct');\n  }\n  ngOnInit() {\n    this.auth.authState.subscribe(user => {\n      this.isAuthenticated = !!user;\n      console.log('isAuthenticated subscribe :: ', this.isAuthenticated);\n      if (this.isAuthenticated) {\n        if (user && user.uid) {\n          this.userId = user.uid;\n          this.filterFavorites();\n        }\n      }\n    });\n  }\n  // Método para filtrar las recetas según la categoría seleccionada\n  filterFavorites() {\n    console.log('this === ', this.userId);\n    if (this.userId) {\n      this.filteredFavorites = [];\n      const favoritos = this.firestore.collection('usuarios').doc(this.userId).collection('favoritos', ref => ref.where('category', '==', this.selectedCategory));\n      favoritos.get().forEach(querySnapshot => {\n        querySnapshot.forEach(doc => {\n          const datos = doc.data();\n          console.log('datos ID :: ', doc.id);\n          this.firestore.collection('recetas').doc(datos['recipeId']).get().forEach(rec => {\n            const d = rec.data();\n            d.id = doc.id;\n            d.creadorId = datos['creadorId'];\n            this.filteredFavorites.push(d);\n          });\n        });\n      });\n    }\n  }\n  openRecipeModal(recipe) {\n    this.selectedRecipe = recipe;\n    this.checkIngredientsAvailability(recipe.ingredientes);\n    this.recipeService.getRecipeCommentsWithUser(recipe.id).subscribe(comments => {\n      this.selectedRecipe.comentarios = comments;\n    });\n    this.isModalOpen = true;\n  }\n  // Método para cerrar el modal\n  closeModal() {\n    this.isModalOpen = false;\n    this.selectedRecipe = null;\n  }\n  removeFromFavorites(recipeId) {\n    console.log('recipeId :: ', recipeId);\n    if (this.userId) {\n      this.firestore.collection('usuarios').doc(this.userId).collection('favoritos').doc(recipeId).delete();\n      this.filterFavorites();\n    }\n  }\n  checkIngredientsAvailability(recipeIngredients) {\n    if (this.userId) {\n      this.inventoryService.getInventory(this.userId).subscribe(inventory => {\n        this.availableIngredients = recipeIngredients.map(ingredient => {\n          const inventoryItem = inventory.find(item => {\n            var _item$nombre, _ingredient$nombre;\n            return (item === null || item === void 0 || (_item$nombre = item.nombre) === null || _item$nombre === void 0 ? void 0 : _item$nombre.toLowerCase()) === (ingredient === null || ingredient === void 0 || (_ingredient$nombre = ingredient.nombre) === null || _ingredient$nombre === void 0 ? void 0 : _ingredient$nombre.toLowerCase());\n          });\n          return {\n            nombre: ingredient.nombre,\n            cantidad: ingredient.cantidad,\n            unidad: ingredient.unidad,\n            disponible: inventoryItem ? inventoryItem.cantidad >= ingredient.cantidad : false\n          };\n        });\n      });\n    }\n  }\n  isFavorite(recipeId) {\n    return this.favorites.some(fav => fav.recipeId === recipeId);\n  }\n  // Nuevo método para editar receta\n  editRecipe(recipeId) {\n    if (this.userId) {\n      this.firestore.collection('recetas').doc(recipeId).get().subscribe(doc => {\n        if (doc.exists) {\n          const recipeData = doc.data();\n          if (recipeData.creadorId === this.userId) {\n            console.log('Navegar a editar receta: ', recipeId);\n            this.router.navigate(['/edit-recipe', recipeId]);\n          } else {\n            console.error('No tienes permisos para editar esta receta');\n          }\n        }\n      });\n    }\n  }\n};\nFavoritesComponent = __decorate([Component({\n  selector: 'app-favorites',\n  templateUrl: './favorites.component.html',\n  styleUrls: ['./favorites.component.scss']\n})], FavoritesComponent);\nexport { FavoritesComponent };","map":{"version":3,"names":["Component","FavoritesComponent","constructor","auth","firestore","recipeService","inventoryService","router","userId","favorites","filteredFavorites","isModalOpen","selectedRecipe","selectedCategory","isAuthenticated","availableIngredients","console","log","ngOnInit","authState","subscribe","user","uid","filterFavorites","favoritos","collection","doc","ref","where","get","forEach","querySnapshot","datos","data","id","rec","d","creadorId","push","openRecipeModal","recipe","checkIngredientsAvailability","ingredientes","getRecipeCommentsWithUser","comments","comentarios","closeModal","removeFromFavorites","recipeId","delete","recipeIngredients","getInventory","inventory","map","ingredient","inventoryItem","find","item","_item$nombre","_ingredient$nombre","nombre","toLowerCase","cantidad","unidad","disponible","isFavorite","some","fav","editRecipe","exists","recipeData","navigate","error","__decorate","selector","templateUrl","styleUrls"],"sources":["/home/jcanulao/Documentos/Miven1.0.0-main/src/app/components/favorites/favorites.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { AngularFireAuth } from '@angular/fire/compat/auth';\nimport { RecipeService } from '../../services/recipe.service';\nimport { InventoryService } from '../../services/inventory.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-favorites',\n  templateUrl: './favorites.component.html',\n  styleUrls: ['./favorites.component.scss'],\n})\nexport class FavoritesComponent implements OnInit {\n  userId: string | null = null;\n  favorites: any[] = []; // Aquí se almacenan todas las recetas favoritas\n  filteredFavorites: any[] = []; // Recetas filtradas por categoría\n  isModalOpen = false;\n  selectedRecipe: any | null = null;\n  selectedCategory = 'desayuno'; // Categoría seleccionada por defecto\n  isAuthenticated: boolean = false;\n  availableIngredients: any[] = [];\n\n  constructor(\n    private auth: AngularFireAuth,\n    private firestore: AngularFirestore,\n    private recipeService: RecipeService, \n    private inventoryService: InventoryService,\n    private router: Router\n  ) {\n    console.log('en construct');\n  }\n\n  ngOnInit(): void {\n    this.auth.authState.subscribe(user => {\n      this.isAuthenticated = !!user;\n      console.log('isAuthenticated subscribe :: ', this.isAuthenticated);\n      if (this.isAuthenticated) {\n        if (user && user.uid) {\n          this.userId = user.uid;\n          this.filterFavorites();\n        }\n      }\n    });\n  }\n\n  // Método para filtrar las recetas según la categoría seleccionada\n  filterFavorites() {\n    console.log('this === ', this.userId);\n\n    if (this.userId) {   \n      this.filteredFavorites = [];\n      const favoritos = this.firestore.collection('usuarios').doc(this.userId).collection('favoritos',\n        ref => ref.where('category', '==', this.selectedCategory)\n      );\n      favoritos.get().forEach((querySnapshot) => {\n        querySnapshot.forEach((doc) => {\n          const datos = doc.data();\n          console.log('datos ID :: ', doc.id);\n          this.firestore.collection('recetas').doc(datos['recipeId']).get().forEach(\n            (rec) => {\n              const d: any = rec.data();\n              d.id = doc.id;\n              d.creadorId = datos['creadorId'];\n              this.filteredFavorites.push(d);\n            }\n          );\n        });\n      });\n    }\n  }\n\n  openRecipeModal(recipe: any) {\n    this.selectedRecipe = recipe;\n    this.checkIngredientsAvailability(recipe.ingredientes);\n    this.recipeService.getRecipeCommentsWithUser(recipe.id).subscribe((comments: any[]) => {\n      this.selectedRecipe.comentarios = comments;\n    });\n    this.isModalOpen = true;\n  }\n\n  // Método para cerrar el modal\n  closeModal() {\n    this.isModalOpen = false;\n    this.selectedRecipe = null;\n  }\n\n  removeFromFavorites(recipeId: string) {\n    console.log('recipeId :: ', recipeId);\n    if (this.userId) {  \n      this.firestore.collection('usuarios').doc(this.userId).collection('favoritos').doc(recipeId).delete();\n      this.filterFavorites();\n    }\n  }\n\n  checkIngredientsAvailability(recipeIngredients: { nombre: string; cantidad: number; unidad: string }[]) {\n    if (this.userId) {\n      this.inventoryService.getInventory(this.userId).subscribe(inventory => {\n        this.availableIngredients = recipeIngredients.map(ingredient => {\n          const inventoryItem = inventory.find(item => \n            item?.nombre?.toLowerCase() === ingredient?.nombre?.toLowerCase()\n          );\n          return {\n            nombre: ingredient.nombre,\n            cantidad: ingredient.cantidad,\n            unidad: ingredient.unidad,\n            disponible: inventoryItem ? inventoryItem.cantidad >= ingredient.cantidad : false\n          };\n        });\n      });\n    }\n  }\n\n  isFavorite(recipeId: string): boolean {\n    return this.favorites.some(fav => fav.recipeId === recipeId);\n  }\n\n  // Nuevo método para editar receta\n  editRecipe(recipeId: string) {\n    if (this.userId) {\n      this.firestore.collection('recetas').doc(recipeId).get().subscribe((doc) => {\n        if (doc.exists) {\n          const recipeData: any = doc.data();\n          if (recipeData.creadorId === this.userId) {\n            console.log('Navegar a editar receta: ', recipeId);\n            this.router.navigate(['/edit-recipe', recipeId]);\n          } else {\n            console.error('No tienes permisos para editar esta receta');\n          }\n        }\n      });\n    }\n  }\n}\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}