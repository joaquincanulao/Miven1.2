{"ast":null,"code":"import { inject } from '@angular/core';\nimport { PushNotifications } from '@capacitor/push-notifications';\nimport { InventoryService } from './inventory.service';\nimport * as i0 from \"@angular/core\";\nexport let NotificationsPushService = /*#__PURE__*/(() => {\n  var _NotificationsPushService;\n  class NotificationsPushService {\n    constructor() {\n      this.InteractionService = inject(InventoryService);\n    }\n    init() {\n      console.log('Initializing NotificationsPushService');\n      PushNotifications.requestPermissions().then(result => {\n        if (result.receive === 'granted') {\n          // Register with Apple / Google to receive push via APNS/FCM\n          PushNotifications.register();\n        } else {\n          // Show some error\n          //this.InteractionService.presentAlert('error', 'Debes habilitar las notificaciones')\n        }\n      });\n      this.addListener();\n    }\n    addListener() {\n      // On success, we should be able to receive notifications\n      PushNotifications.addListener('registration', token => {\n        alert('Push registration success, token: ' + token.value);\n      });\n      // Some issue with our setup and push will not work\n      PushNotifications.addListener('registrationError', error => {\n        alert('Error on registration: ' + JSON.stringify(error));\n      });\n      // Show us the notification payload if the app is open on our device\n      PushNotifications.addListener('pushNotificationReceived', notification => {\n        alert('Push received: ' + JSON.stringify(notification));\n      });\n      // Method called when tapping on a notification\n      PushNotifications.addListener('pushNotificationActionPerformed', notification => {\n        alert('Push action performed: ' + JSON.stringify(notification));\n      });\n    }\n  }\n  _NotificationsPushService = NotificationsPushService;\n  _NotificationsPushService.ɵfac = function NotificationsPushService_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || _NotificationsPushService)();\n  };\n  _NotificationsPushService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: _NotificationsPushService,\n    factory: _NotificationsPushService.ɵfac,\n    providedIn: 'root'\n  });\n  return NotificationsPushService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}