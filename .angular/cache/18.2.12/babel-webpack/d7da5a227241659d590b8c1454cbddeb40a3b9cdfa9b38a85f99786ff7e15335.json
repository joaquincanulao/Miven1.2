{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../services/recipe.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@ionic/angular\";\nfunction EditRecipeComponent_div_27_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 13)(1, \"ion-item\")(2, \"ion-label\", 1);\n    i0.ɵɵtext(3, \"Nombre\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"ion-input\", 14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"ion-item\")(6, \"ion-label\", 1);\n    i0.ɵɵtext(7, \"Cantidad\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(8, \"ion-input\", 15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"ion-item\")(10, \"ion-label\", 1);\n    i0.ɵɵtext(11, \"Unidad\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(12, \"ion-input\", 16);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"ion-button\", 17);\n    i0.ɵɵlistener(\"click\", function EditRecipeComponent_div_27_Template_ion_button_click_13_listener() {\n      const i_r2 = i0.ɵɵrestoreView(_r1).index;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.removeIngredient(i_r2));\n    });\n    i0.ɵɵtext(14, \"Eliminar Ingrediente\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const i_r2 = ctx.index;\n    i0.ɵɵproperty(\"formGroupName\", i_r2);\n  }\n}\nexport let EditRecipeComponent = /*#__PURE__*/(() => {\n  var _EditRecipeComponent;\n  class EditRecipeComponent {\n    constructor(fb, route, router, recipeService) {\n      this.fb = fb;\n      this.route = route;\n      this.router = router;\n      this.recipeService = recipeService;\n      this.recipeId = null;\n      this.recipeForm = this.fb.group({\n        titulo: ['', Validators.required],\n        descripcion: ['', Validators.required],\n        categoria: ['', Validators.required],\n        ingredientes: this.fb.array([]) // FormArray para ingredientes\n      });\n    }\n    ngOnInit() {\n      this.recipeId = this.route.snapshot.paramMap.get('id');\n      if (this.recipeId) {\n        this.loadRecipe();\n      }\n    }\n    /**\n     * Método auxiliar para obtener el FormArray de ingredientes\n     */\n    get ingredientes() {\n      return this.recipeForm.get('ingredientes');\n    }\n    /**\n     * Cargar la receta desde el servicio y poblar el formulario\n     */\n    loadRecipe() {\n      this.recipeService.getRecipeById(this.recipeId).subscribe(recipe => {\n        if (recipe) {\n          this.populateForm(recipe);\n        }\n      });\n    }\n    /**\n     * Poblar el formulario con los datos de la receta\n     */\n    populateForm(recipe) {\n      this.recipeForm.patchValue({\n        titulo: recipe.titulo,\n        descripcion: recipe.descripcion,\n        categoria: recipe.categoria\n      });\n      // Limpiar ingredientes previos y agregar los nuevos\n      this.ingredientes.clear();\n      recipe.ingredientes.forEach(ingredient => {\n        this.ingredientes.push(this.fb.group({\n          nombre: [ingredient.nombre, Validators.required],\n          cantidad: [ingredient.cantidad, [Validators.required, Validators.min(1)]],\n          unidad: [ingredient.unidad, Validators.required]\n        }));\n      });\n    }\n    /**\n     * Agregar un nuevo ingrediente al FormArray\n     */\n    addIngredient() {\n      this.ingredientes.push(this.fb.group({\n        nombre: ['', Validators.required],\n        cantidad: [1, [Validators.required, Validators.min(1)]],\n        unidad: ['', Validators.required]\n      }));\n    }\n    /**\n     * Eliminar un ingrediente del FormArray\n     * @param index Índice del ingrediente a eliminar\n     */\n    removeIngredient(index) {\n      this.ingredientes.removeAt(index);\n    }\n    /**\n     * Guardar los cambios de la receta\n     */\n    submitForm() {\n      if (this.recipeForm.valid && this.recipeId) {\n        this.recipeService.updateRecipe(this.recipeId, this.recipeForm.value).then(() => {\n          console.log('Receta actualizada con éxito');\n          this.router.navigate(['/recetas']);\n        }).catch(error => {\n          console.error('Error al actualizar la receta:', error);\n        });\n      } else {\n        console.error('Formulario inválido o ID de receta no encontrado');\n      }\n    }\n  }\n  _EditRecipeComponent = EditRecipeComponent;\n  _EditRecipeComponent.ɵfac = function EditRecipeComponent_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || _EditRecipeComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.RecipeService));\n  };\n  _EditRecipeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: _EditRecipeComponent,\n    selectors: [[\"app-edit-recipe\"]],\n    decls: 32,\n    vars: 2,\n    consts: [[3, \"ngSubmit\", \"formGroup\"], [\"position\", \"floating\"], [\"formControlName\", \"titulo\"], [\"formControlName\", \"descripcion\"], [\"formControlName\", \"categoria\"], [\"value\", \"desayuno\"], [\"value\", \"almuerzo\"], [\"value\", \"cena\"], [\"value\", \"postre\"], [\"formArrayName\", \"ingredientes\"], [3, \"formGroupName\", 4, \"ngFor\", \"ngForOf\"], [\"expand\", \"block\", 3, \"click\"], [\"expand\", \"block\", \"type\", \"submit\"], [3, \"formGroupName\"], [\"formControlName\", \"nombre\"], [\"type\", \"number\", \"formControlName\", \"cantidad\"], [\"formControlName\", \"unidad\"], [\"expand\", \"block\", \"color\", \"danger\", 3, \"click\"]],\n    template: function EditRecipeComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ion-header\")(1, \"ion-toolbar\")(2, \"ion-title\");\n        i0.ɵɵtext(3, \"Editar Receta\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(4, \"ion-content\")(5, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function EditRecipeComponent_Template_form_ngSubmit_5_listener() {\n          return ctx.submitForm();\n        });\n        i0.ɵɵelementStart(6, \"ion-item\")(7, \"ion-label\", 1);\n        i0.ɵɵtext(8, \"T\\u00EDtulo\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(9, \"ion-input\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"ion-item\")(11, \"ion-label\", 1);\n        i0.ɵɵtext(12, \"Descripci\\u00F3n\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(13, \"ion-textarea\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"ion-item\")(15, \"ion-label\", 1);\n        i0.ɵɵtext(16, \"Categor\\u00EDa\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"ion-select\", 4)(18, \"ion-select-option\", 5);\n        i0.ɵɵtext(19, \"Desayuno\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"ion-select-option\", 6);\n        i0.ɵɵtext(21, \"Almuerzo\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"ion-select-option\", 7);\n        i0.ɵɵtext(23, \"Cena\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"ion-select-option\", 8);\n        i0.ɵɵtext(25, \"Postre\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(26, \"div\", 9);\n        i0.ɵɵtemplate(27, EditRecipeComponent_div_27_Template, 15, 1, \"div\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(28, \"ion-button\", 11);\n        i0.ɵɵlistener(\"click\", function EditRecipeComponent_Template_ion_button_click_28_listener() {\n          return ctx.addIngredient();\n        });\n        i0.ɵɵtext(29, \"Agregar Ingrediente\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(30, \"ion-button\", 12);\n        i0.ɵɵtext(31, \"Guardar Cambios\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"formGroup\", ctx.recipeForm);\n        i0.ɵɵadvance(22);\n        i0.ɵɵproperty(\"ngForOf\", ctx.ingredientes.controls);\n      }\n    },\n    dependencies: [i4.NgForOf, i5.IonButton, i5.IonContent, i5.IonHeader, i5.IonInput, i5.IonItem, i5.IonLabel, i5.IonSelect, i5.IonSelectOption, i5.IonTextarea, i5.IonTitle, i5.IonToolbar, i5.NumericValueAccessor, i5.SelectValueAccessor, i5.TextValueAccessor, i1.ɵNgNoValidate, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i1.FormGroupName, i1.FormArrayName]\n  });\n  return EditRecipeComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}