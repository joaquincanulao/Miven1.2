{"ast":null,"code":"import _defineProperty from \"/home/jcanulao/Documentos/Miven1.0.0-main/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nvar _AngularFireModule;\nimport * as i0 from '@angular/core';\nimport { InjectionToken, isDevMode, NgZone, Optional, VERSION as VERSION$1, PLATFORM_ID, NgModule, Inject } from '@angular/core';\nimport { VERSION } from '@angular/fire';\nimport firebase from 'firebase/compat/app';\n\n// DEBUG quick debugger function for inline logging that typescript doesn't complain about\n//       wrote it for debugging the ɵlazySDKProxy, commenting out for now; should consider exposing a\n//       verbose mode for AngularFire in a future release that uses something like this in multiple places\n//       usage: () => log('something') || returnValue\n// const log = (...args: any[]): false => { console.log(...args); return false }\n// The problem here are things like ngOnDestroy are missing, then triggering the service\n// rather than dig too far; I'm capturing these as I go.\nconst noopFunctions = ['ngOnDestroy'];\n// INVESTIGATE should we make the Proxy revokable and do some cleanup?\n//             right now it's fairly simple but I'm sure this will grow in complexity\nconst ɵlazySDKProxy = (klass, observable, zone, options = {}) => {\n  return new Proxy(klass, {\n    get: (_, name) => zone.runOutsideAngular(() => {\n      if (klass[name]) {\n        var _options$spy;\n        if (options !== null && options !== void 0 && (_options$spy = options.spy) !== null && _options$spy !== void 0 && _options$spy.get) {\n          options.spy.get(name, klass[name]);\n        }\n        return klass[name];\n      }\n      if (noopFunctions.indexOf(name) > -1) {\n        return () => undefined;\n      }\n      const promise = observable.toPromise().then(mod => {\n        const ret = mod === null || mod === void 0 ? void 0 : mod[name];\n        // TODO move to proper type guards\n        if (typeof ret === 'function') {\n          return ret.bind(mod);\n        } else if (ret !== null && ret !== void 0 && ret.then) {\n          return ret.then(res => zone.run(() => res));\n        } else {\n          return zone.run(() => ret);\n        }\n      });\n      // recurse the proxy\n      return new Proxy(() => undefined, {\n        get: (_, name) => promise[name],\n        // TODO handle callbacks as transparently as I can\n        apply: (self, _, args) => promise.then(it => {\n          var _options$spy2;\n          const res = it === null || it === void 0 ? void 0 : it(...args);\n          if (options !== null && options !== void 0 && (_options$spy2 = options.spy) !== null && _options$spy2 !== void 0 && _options$spy2.apply) {\n            options.spy.apply(name, args, res);\n          }\n          return res;\n        })\n      });\n    })\n  });\n};\nconst ɵapplyMixins = (derivedCtor, constructors) => {\n  constructors.forEach(baseCtor => {\n    Object.getOwnPropertyNames(baseCtor.prototype || baseCtor).forEach(name => {\n      Object.defineProperty(derivedCtor.prototype, name, Object.getOwnPropertyDescriptor(baseCtor.prototype || baseCtor, name));\n    });\n  });\n};\nclass FirebaseApp {\n  constructor(app) {\n    return app;\n  }\n}\nconst FIREBASE_OPTIONS = new InjectionToken('angularfire2.app.options');\nconst FIREBASE_APP_NAME = new InjectionToken('angularfire2.app.name');\nfunction ɵfirebaseAppFactory(options, zone, nameOrConfig) {\n  const name = typeof nameOrConfig === 'string' && nameOrConfig || '[DEFAULT]';\n  const config = typeof nameOrConfig === 'object' && nameOrConfig || {};\n  config.name = config.name || name;\n  // Added any due to some inconsistency between @firebase/app and firebase types\n  const existingApp = firebase.apps.filter(app => app && app.name === config.name)[0];\n  // We support FirebaseConfig, initializeApp's public type only accepts string; need to cast as any\n  // Could be solved with https://github.com/firebase/firebase-js-sdk/pull/1206\n  const app = existingApp || zone.runOutsideAngular(() => firebase.initializeApp(options, config));\n  try {\n    if (JSON.stringify(options) !== JSON.stringify(app.options)) {\n      const hmr = !!module.hot;\n      log$1('error', `${app.name} Firebase App already initialized with different options${hmr ? ', you may need to reload as Firebase is not HMR aware.' : '.'}`);\n    }\n  } catch (e) {/* empty */}\n  return new FirebaseApp(app);\n}\nconst log$1 = (level, ...args) => {\n  if (isDevMode() && typeof console !== 'undefined') {\n    // eslint-disable-next-line no-console\n    console[level](...args);\n  }\n};\nconst FIREBASE_APP_PROVIDER = {\n  provide: FirebaseApp,\n  useFactory: ɵfirebaseAppFactory,\n  deps: [FIREBASE_OPTIONS, NgZone, [new Optional(), FIREBASE_APP_NAME]]\n};\nclass AngularFireModule {\n  static initializeApp(options, nameOrConfig) {\n    return {\n      ngModule: AngularFireModule,\n      providers: [{\n        provide: FIREBASE_OPTIONS,\n        useValue: options\n      }, {\n        provide: FIREBASE_APP_NAME,\n        useValue: nameOrConfig\n      }]\n    };\n  }\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  constructor(platformId) {\n    firebase.registerVersion('angularfire', VERSION.full, 'core');\n    firebase.registerVersion('angularfire', VERSION.full, 'app-compat');\n    // eslint-disable-next-line @typescript-eslint/no-base-to-string\n    firebase.registerVersion('angular', VERSION$1.full, platformId.toString());\n  }\n}\n_AngularFireModule = AngularFireModule;\n_defineProperty(AngularFireModule, \"\\u0275fac\", function _AngularFireModule_Factory(__ngFactoryType__) {\n  return new (__ngFactoryType__ || _AngularFireModule)(i0.ɵɵinject(PLATFORM_ID));\n});\n_defineProperty(AngularFireModule, \"\\u0275mod\", /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: _AngularFireModule\n}));\n_defineProperty(AngularFireModule, \"\\u0275inj\", /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [FIREBASE_APP_PROVIDER]\n}));\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AngularFireModule, [{\n    type: NgModule,\n    args: [{\n      providers: [FIREBASE_APP_PROVIDER]\n    }]\n  }], () => [{\n    type: Object,\n    decorators: [{\n      type: Inject,\n      args: [PLATFORM_ID]\n    }]\n  }], null);\n})();\nfunction ɵcacheInstance(cacheKey, moduleName, appName, fn, deps) {\n  const [, instance, cachedDeps] = globalThis.ɵAngularfireInstanceCache.find(it => it[0] === cacheKey) || [];\n  if (instance) {\n    if (!matchDep(deps, cachedDeps)) {\n      log('error', `${moduleName} was already initialized on the ${appName} Firebase App with different settings.${IS_HMR ? ' You may need to reload as Firebase is not HMR aware.' : ''}`);\n      log('warn', {\n        is: deps,\n        was: cachedDeps\n      });\n    }\n    return instance;\n  } else {\n    const newInstance = fn();\n    globalThis.ɵAngularfireInstanceCache.push([cacheKey, newInstance, deps]);\n    return newInstance;\n  }\n}\nfunction matchDep(a, b) {\n  try {\n    return a.toString() === b.toString();\n  } catch (_) {\n    return a === b;\n  }\n}\nconst IS_HMR = typeof module !== 'undefined' && !!module.hot;\nconst log = (level, ...args) => {\n  if (isDevMode() && typeof console !== 'undefined') {\n    // eslint-disable-next-line no-console\n    console[level](...args);\n  }\n};\nglobalThis.ɵAngularfireInstanceCache || (globalThis.ɵAngularfireInstanceCache = []);\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AngularFireModule, FIREBASE_APP_NAME, FIREBASE_OPTIONS, FirebaseApp, ɵapplyMixins, ɵcacheInstance, ɵfirebaseAppFactory, ɵlazySDKProxy };","map":{"version":3,"names":["i0","InjectionToken","isDevMode","NgZone","Optional","VERSION","VERSION$1","PLATFORM_ID","NgModule","Inject","firebase","noopFunctions","ɵlazySDKProxy","klass","observable","zone","options","Proxy","get","_","name","runOutsideAngular","_options$spy","spy","indexOf","undefined","promise","toPromise","then","mod","ret","bind","res","run","apply","self","args","it","_options$spy2","ɵapplyMixins","derivedCtor","constructors","forEach","baseCtor","Object","getOwnPropertyNames","prototype","defineProperty","getOwnPropertyDescriptor","FirebaseApp","constructor","app","FIREBASE_OPTIONS","FIREBASE_APP_NAME","ɵfirebaseAppFactory","nameOrConfig","config","existingApp","apps","filter","initializeApp","JSON","stringify","hmr","module","hot","log$1","e","level","console","FIREBASE_APP_PROVIDER","provide","useFactory","deps","AngularFireModule","ngModule","providers","useValue","platformId","registerVersion","full","toString","_AngularFireModule","_defineProperty","_AngularFireModule_Factory","__ngFactoryType__","ɵɵinject","ɵɵdefineNgModule","type","ɵɵdefineInjector","ngDevMode","ɵsetClassMetadata","decorators","ɵcacheInstance","cacheKey","moduleName","appName","fn","instance","cachedDeps","globalThis","ɵAngularfireInstanceCache","find","matchDep","log","IS_HMR","is","was","newInstance","push","a","b"],"sources":["/home/jcanulao/Documentos/Miven1.0.0-main/node_modules/@angular/fire/fesm2022/angular-fire-compat.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { InjectionToken, isDevMode, NgZone, Optional, VERSION as VERSION$1, PLATFORM_ID, NgModule, Inject } from '@angular/core';\nimport { VERSION } from '@angular/fire';\nimport firebase from 'firebase/compat/app';\n\n// DEBUG quick debugger function for inline logging that typescript doesn't complain about\n//       wrote it for debugging the ɵlazySDKProxy, commenting out for now; should consider exposing a\n//       verbose mode for AngularFire in a future release that uses something like this in multiple places\n//       usage: () => log('something') || returnValue\n// const log = (...args: any[]): false => { console.log(...args); return false }\n// The problem here are things like ngOnDestroy are missing, then triggering the service\n// rather than dig too far; I'm capturing these as I go.\nconst noopFunctions = ['ngOnDestroy'];\n// INVESTIGATE should we make the Proxy revokable and do some cleanup?\n//             right now it's fairly simple but I'm sure this will grow in complexity\nconst ɵlazySDKProxy = (klass, observable, zone, options = {}) => {\n    return new Proxy(klass, {\n        get: (_, name) => zone.runOutsideAngular(() => {\n            if (klass[name]) {\n                if (options?.spy?.get) {\n                    options.spy.get(name, klass[name]);\n                }\n                return klass[name];\n            }\n            if (noopFunctions.indexOf(name) > -1) {\n                return () => undefined;\n            }\n            const promise = observable.toPromise().then(mod => {\n                const ret = mod?.[name];\n                // TODO move to proper type guards\n                if (typeof ret === 'function') {\n                    return ret.bind(mod);\n                }\n                else if (ret?.then) {\n                    return ret.then((res) => zone.run(() => res));\n                }\n                else {\n                    return zone.run(() => ret);\n                }\n            });\n            // recurse the proxy\n            return new Proxy(() => undefined, {\n                get: (_, name) => promise[name],\n                // TODO handle callbacks as transparently as I can\n                apply: (self, _, args) => promise.then(it => {\n                    const res = it?.(...args);\n                    if (options?.spy?.apply) {\n                        options.spy.apply(name, args, res);\n                    }\n                    return res;\n                })\n            });\n        })\n    });\n};\nconst ɵapplyMixins = (derivedCtor, constructors) => {\n    constructors.forEach((baseCtor) => {\n        Object.getOwnPropertyNames(baseCtor.prototype || baseCtor).forEach((name) => {\n            Object.defineProperty(derivedCtor.prototype, name, Object.getOwnPropertyDescriptor(baseCtor.prototype || baseCtor, name));\n        });\n    });\n};\n\nclass FirebaseApp {\n    constructor(app) {\n        return app;\n    }\n}\n\nconst FIREBASE_OPTIONS = new InjectionToken('angularfire2.app.options');\nconst FIREBASE_APP_NAME = new InjectionToken('angularfire2.app.name');\nfunction ɵfirebaseAppFactory(options, zone, nameOrConfig) {\n    const name = typeof nameOrConfig === 'string' && nameOrConfig || '[DEFAULT]';\n    const config = typeof nameOrConfig === 'object' && nameOrConfig || {};\n    config.name = config.name || name;\n    // Added any due to some inconsistency between @firebase/app and firebase types\n    const existingApp = firebase.apps.filter(app => app && app.name === config.name)[0];\n    // We support FirebaseConfig, initializeApp's public type only accepts string; need to cast as any\n    // Could be solved with https://github.com/firebase/firebase-js-sdk/pull/1206\n    const app = (existingApp || zone.runOutsideAngular(() => firebase.initializeApp(options, config)));\n    try {\n        if (JSON.stringify(options) !== JSON.stringify(app.options)) {\n            const hmr = !!module.hot;\n            log$1('error', `${app.name} Firebase App already initialized with different options${hmr ? ', you may need to reload as Firebase is not HMR aware.' : '.'}`);\n        }\n    }\n    catch (e) { /* empty */ }\n    return new FirebaseApp(app);\n}\nconst log$1 = (level, ...args) => {\n    if (isDevMode() && typeof console !== 'undefined') {\n        // eslint-disable-next-line no-console\n        console[level](...args);\n    }\n};\nconst FIREBASE_APP_PROVIDER = {\n    provide: FirebaseApp,\n    useFactory: ɵfirebaseAppFactory,\n    deps: [\n        FIREBASE_OPTIONS,\n        NgZone,\n        [new Optional(), FIREBASE_APP_NAME]\n    ]\n};\nclass AngularFireModule {\n    static initializeApp(options, nameOrConfig) {\n        return {\n            ngModule: AngularFireModule,\n            providers: [\n                { provide: FIREBASE_OPTIONS, useValue: options },\n                { provide: FIREBASE_APP_NAME, useValue: nameOrConfig }\n            ]\n        };\n    }\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    constructor(platformId) {\n        firebase.registerVersion('angularfire', VERSION.full, 'core');\n        firebase.registerVersion('angularfire', VERSION.full, 'app-compat');\n        // eslint-disable-next-line @typescript-eslint/no-base-to-string\n        firebase.registerVersion('angular', VERSION$1.full, platformId.toString());\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.0.0\", ngImport: i0, type: AngularFireModule, deps: [{ token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"18.0.0\", ngImport: i0, type: AngularFireModule });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"18.0.0\", ngImport: i0, type: AngularFireModule, providers: [FIREBASE_APP_PROVIDER] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.0.0\", ngImport: i0, type: AngularFireModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    providers: [FIREBASE_APP_PROVIDER]\n                }]\n        }], ctorParameters: () => [{ type: Object, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }] });\n\nfunction ɵcacheInstance(cacheKey, moduleName, appName, fn, deps) {\n    const [, instance, cachedDeps] = globalThis.ɵAngularfireInstanceCache.find((it) => it[0] === cacheKey) || [];\n    if (instance) {\n        if (!matchDep(deps, cachedDeps)) {\n            log('error', `${moduleName} was already initialized on the ${appName} Firebase App with different settings.${IS_HMR ? ' You may need to reload as Firebase is not HMR aware.' : ''}`);\n            log('warn', { is: deps, was: cachedDeps });\n        }\n        return instance;\n    }\n    else {\n        const newInstance = fn();\n        globalThis.ɵAngularfireInstanceCache.push([cacheKey, newInstance, deps]);\n        return newInstance;\n    }\n}\nfunction matchDep(a, b) {\n    try {\n        return a.toString() === b.toString();\n    }\n    catch (_) {\n        return a === b;\n    }\n}\nconst IS_HMR = typeof module !== 'undefined' && !!module.hot;\nconst log = (level, ...args) => {\n    if (isDevMode() && typeof console !== 'undefined') {\n        // eslint-disable-next-line no-console\n        console[level](...args);\n    }\n};\nglobalThis.ɵAngularfireInstanceCache ||= [];\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AngularFireModule, FIREBASE_APP_NAME, FIREBASE_OPTIONS, FirebaseApp, ɵapplyMixins, ɵcacheInstance, ɵfirebaseAppFactory, ɵlazySDKProxy };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}