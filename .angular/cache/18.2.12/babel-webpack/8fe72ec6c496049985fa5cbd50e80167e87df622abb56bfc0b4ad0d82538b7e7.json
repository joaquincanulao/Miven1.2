{"ast":null,"code":"var _RegisterPage;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/auth.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@ionic/angular\";\nimport * as i4 from \"@angular/router\";\nexport class RegisterPage {\n  constructor(authService) {\n    this.authService = authService;\n    this.email = ''; // Asignar un valor inicial\n    this.password = ''; // Asignar un valor inicial\n    this.nombre = ''; // Definir la propiedad 'nombre'\n  }\n  onRegister() {\n    this.authService.registerUser(this.email, this.password, this.nombre); // Añadir el nombre como tercer argumento\n  }\n}\n_RegisterPage = RegisterPage;\n_RegisterPage.ɵfac = function RegisterPage_Factory(__ngFactoryType__) {\n  return new (__ngFactoryType__ || _RegisterPage)(i0.ɵɵdirectiveInject(i1.AuthService));\n};\n_RegisterPage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _RegisterPage,\n  selectors: [[\"app-register\"]],\n  decls: 23,\n  vars: 3,\n  consts: [[1, \"ion-padding\"], [\"position\", \"floating\"], [\"name\", \"nombre\", \"required\", \"\", 3, \"ngModelChange\", \"ngModel\"], [\"type\", \"email\", 3, \"ngModelChange\", \"ngModel\"], [\"type\", \"password\", 3, \"ngModelChange\", \"ngModel\"], [\"expand\", \"full\", 3, \"click\"], [\"expand\", \"full\", \"fill\", \"clear\", \"routerLink\", \"/login\"]],\n  template: function RegisterPage_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ion-header\")(1, \"ion-toolbar\")(2, \"ion-title\");\n      i0.ɵɵtext(3, \"Registro\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(4, \"ion-content\", 0)(5, \"ion-card\")(6, \"ion-card-content\")(7, \"ion-item\")(8, \"ion-label\", 1);\n      i0.ɵɵtext(9, \"Nombre\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"ion-input\", 2);\n      i0.ɵɵtwoWayListener(\"ngModelChange\", function RegisterPage_Template_ion_input_ngModelChange_10_listener($event) {\n        i0.ɵɵtwoWayBindingSet(ctx.nombre, $event) || (ctx.nombre = $event);\n        return $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(11, \"ion-item\")(12, \"ion-label\", 1);\n      i0.ɵɵtext(13, \"Correo Electr\\u00F3nico\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"ion-input\", 3);\n      i0.ɵɵtwoWayListener(\"ngModelChange\", function RegisterPage_Template_ion_input_ngModelChange_14_listener($event) {\n        i0.ɵɵtwoWayBindingSet(ctx.email, $event) || (ctx.email = $event);\n        return $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(15, \"ion-item\")(16, \"ion-label\", 1);\n      i0.ɵɵtext(17, \"Contrase\\u00F1a\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"ion-input\", 4);\n      i0.ɵɵtwoWayListener(\"ngModelChange\", function RegisterPage_Template_ion_input_ngModelChange_18_listener($event) {\n        i0.ɵɵtwoWayBindingSet(ctx.password, $event) || (ctx.password = $event);\n        return $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(19, \"ion-button\", 5);\n      i0.ɵɵlistener(\"click\", function RegisterPage_Template_ion_button_click_19_listener() {\n        return ctx.onRegister();\n      });\n      i0.ɵɵtext(20, \"Registrarse\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"ion-button\", 6);\n      i0.ɵɵtext(22, \"Ya tengo una cuenta\");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(10);\n      i0.ɵɵtwoWayProperty(\"ngModel\", ctx.nombre);\n      i0.ɵɵadvance(4);\n      i0.ɵɵtwoWayProperty(\"ngModel\", ctx.email);\n      i0.ɵɵadvance(4);\n      i0.ɵɵtwoWayProperty(\"ngModel\", ctx.password);\n    }\n  },\n  dependencies: [i2.NgControlStatus, i2.RequiredValidator, i2.NgModel, i3.IonButton, i3.IonCard, i3.IonCardContent, i3.IonContent, i3.IonHeader, i3.IonInput, i3.IonItem, i3.IonLabel, i3.IonTitle, i3.IonToolbar, i3.TextValueAccessor, i3.RouterLinkDelegate, i4.RouterLink],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["RegisterPage","constructor","authService","email","password","nombre","onRegister","registerUser","i0","ɵɵdirectiveInject","i1","AuthService","selectors","decls","vars","consts","template","RegisterPage_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵtwoWayListener","RegisterPage_Template_ion_input_ngModelChange_10_listener","$event","ɵɵtwoWayBindingSet","RegisterPage_Template_ion_input_ngModelChange_14_listener","RegisterPage_Template_ion_input_ngModelChange_18_listener","ɵɵlistener","RegisterPage_Template_ion_button_click_19_listener","ɵɵadvance","ɵɵtwoWayProperty"],"sources":["/home/jcanulao/Documentos/Miven1.0.0-main/src/app/register/register.page.ts","/home/jcanulao/Documentos/Miven1.0.0-main/src/app/register/register.page.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { AuthService } from '../services/auth.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.page.html',\n  styleUrls: ['./register.page.scss'],\n})\nexport class RegisterPage {\n  email: string = ''; // Asignar un valor inicial\n  password: string = ''; // Asignar un valor inicial\n  nombre: string = ''; // Definir la propiedad 'nombre'\n\n  constructor(private authService: AuthService) {}\n\n  onRegister() {\n    this.authService.registerUser(this.email, this.password, this.nombre); // Añadir el nombre como tercer argumento\n  }\n}\n","<ion-header>\n  <ion-toolbar>\n    <ion-title>Registro</ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content class=\"ion-padding\">\n  <ion-card>\n    <ion-card-content>\n      <ion-item>\n        <ion-label position=\"floating\">Nombre</ion-label>\n        <ion-input [(ngModel)]=\"nombre\" name=\"nombre\" required></ion-input>\n      </ion-item>\n      <ion-item>\n        <ion-label position=\"floating\">Correo Electrónico</ion-label>\n        <ion-input type=\"email\" [(ngModel)]=\"email\"></ion-input>\n      </ion-item>\n      <ion-item>\n        <ion-label position=\"floating\">Contraseña</ion-label>\n        <ion-input type=\"password\" [(ngModel)]=\"password\"></ion-input>\n      </ion-item>\n      <ion-button expand=\"full\" (click)=\"onRegister()\">Registrarse</ion-button>\n      <ion-button expand=\"full\" fill=\"clear\" routerLink=\"/login\">Ya tengo una cuenta</ion-button>\n    </ion-card-content>\n  </ion-card>\n</ion-content>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}