{"ast":null,"code":"import _asyncToGenerator from \"/home/jcanulao/Documentos/Miven1.0.0-main/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { Camera, CameraResultType, CameraSource } from '@capacitor/camera';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/inventory.service\";\nimport * as i2 from \"@angular/fire/compat/auth\";\nimport * as i3 from \"@angular/fire/compat/firestore\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@ionic/angular\";\nimport * as i6 from \"@angular/forms\";\nfunction AddItemComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h3\");\n    i0.ɵɵtext(2, \"Imagen Capturada:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"img\", 14);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"src\", ctx_r0.capturedImage, i0.ɵɵsanitizeUrl);\n  }\n}\nfunction AddItemComponent_ion_select_option_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-select-option\", 15);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", item_r2);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(item_r2);\n  }\n}\nfunction AddItemComponent_ion_item_18_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-item\")(1, \"ion-label\", 3);\n    i0.ɵɵtext(2, \"Nuevo \\u00CDtem\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"ion-input\", 8);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function AddItemComponent_ion_item_18_Template_ion_input_ngModelChange_3_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r0 = i0.ɵɵnextContext();\n      i0.ɵɵtwoWayBindingSet(ctx_r0.newItem.nombre, $event) || (ctx_r0.newItem.nombre = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r0.newItem.nombre);\n  }\n}\nexport let AddItemComponent = /*#__PURE__*/(() => {\n  var _AddItemComponent;\n  class AddItemComponent {\n    constructor(inventoryService, auth, firestore) {\n      this.inventoryService = inventoryService;\n      this.auth = auth;\n      this.firestore = firestore;\n      this.predefinedItems = [];\n      this.availableItems = [];\n      this.selectedItem = null;\n      this.isNewItem = false;\n      this.newItem = {\n        nombre: '',\n        cantidad: 0,\n        fechaVencimiento: '',\n        unidadMedida: ''\n      };\n      this.userId = null;\n      this.capturedImage = null;\n      this.auth.user.subscribe(user => {\n        if (user) {\n          this.userId = user.uid;\n        }\n      });\n    }\n    ngOnInit() {\n      this.loadAvailableItems();\n    }\n    openCamera() {\n      var _this = this;\n      return _asyncToGenerator(function* () {\n        try {\n          const image = yield Camera.getPhoto({\n            quality: 90,\n            resultType: CameraResultType.Base64,\n            source: CameraSource.Camera\n          });\n          _this.capturedImage = `data:image/jpeg;base64,${image.base64String}`;\n        } catch (error) {\n          console.error('Error al capturar la imagen:', error);\n        }\n      })();\n    }\n    // Cargar los ítems disponibles desde Firestore...\n    loadAvailableItems() {\n      this.firestore.collection('items').valueChanges({\n        idField: 'id'\n      }).subscribe(items => {\n        this.availableItems = [...this.predefinedItems, ...items.map(item => item.nombre)];\n      });\n    }\n    formatFechaVencimiento(fecha) {\n      const date = new Date(fecha);\n      const day = String(date.getDate()).padStart(2, '0');\n      const month = String(date.getMonth() + 1).padStart(2, '0');\n      const year = date.getFullYear();\n      return `${day}-${month}-${year}`;\n    }\n    onItemSelected(event) {\n      const selectedItem = event.detail.value;\n      if (selectedItem === 'Otro') {\n        this.isNewItem = true;\n        this.newItem.nombre = '';\n      } else {\n        this.isNewItem = false;\n        this.newItem.nombre = selectedItem;\n      }\n    }\n    addItem() {\n      if (!this.isNewItem && this.selectedItem) {\n        this.newItem.nombre = this.selectedItem;\n      }\n      if (this.userId && this.newItem.nombre && this.newItem.cantidad > 0 && this.newItem.unidadMedida && this.newItem.fechaVencimiento) {\n        const formattedFecha = this.formatFechaVencimiento(this.newItem.fechaVencimiento); // Formatear la fecha\n        const itemToSave = {\n          nombre: this.newItem.nombre,\n          cantidad: this.newItem.cantidad,\n          fechaVencimiento: formattedFecha,\n          unidadMedida: this.newItem.unidadMedida,\n          imageUrl: this.capturedImage // Agregar la imagen capturada\n        };\n        this.inventoryService.addItemToInventory(itemToSave, this.userId).then(() => {\n          if (this.isNewItem) {\n            this.addItemToFirestore(this.newItem.nombre);\n          }\n          console.log('Ítem agregado con éxito');\n          this.resetForm();\n        }).catch(error => {\n          console.error('Error al agregar el ítem:', error);\n        });\n      } else {\n        console.error('Todos los campos son obligatorios');\n      }\n    }\n    // Guardar un ítem nuevo en Firestore\n    addItemToFirestore(nombre) {\n      this.firestore.collection('items').doc(nombre).set({\n        nombre\n      });\n    }\n    // Método para resetear el formulario\n    resetForm() {\n      this.newItem = {\n        nombre: '',\n        cantidad: 0,\n        fechaVencimiento: '',\n        unidadMedida: ''\n      };\n      this.selectedItem = null;\n      this.isNewItem = false;\n      this.capturedImage = null;\n    }\n  }\n  _AddItemComponent = AddItemComponent;\n  _AddItemComponent.ɵfac = function AddItemComponent_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || _AddItemComponent)(i0.ɵɵdirectiveInject(i1.InventoryService), i0.ɵɵdirectiveInject(i2.AngularFireAuth), i0.ɵɵdirectiveInject(i3.AngularFirestore));\n  };\n  _AddItemComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: _AddItemComponent,\n    selectors: [[\"app-add-item\"]],\n    decls: 39,\n    vars: 6,\n    consts: [[\"slot\", \"start\"], [\"expand\", \"block\", 3, \"click\"], [4, \"ngIf\"], [\"position\", \"floating\"], [\"placeholder\", \"Selecciona o agrega un \\u00EDtem\", 3, \"ionChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"value\", \"Otro\"], [\"type\", \"number\", 3, \"ngModelChange\", \"ngModel\"], [3, \"ngModelChange\", \"ngModel\"], [\"value\", \"gramos\"], [\"value\", \"ml\"], [\"value\", \"unidad\"], [\"displayFormat\", \"YYYY-MM-DD\", \"min\", \"2024-01-01\", \"max\", \"2030-12-31\", 3, \"ngModelChange\", \"ngModel\"], [\"expand\", \"full\", 3, \"click\"], [\"alt\", \"Imagen Capturada\", 2, \"width\", \"100%\", \"height\", \"auto\", \"margin-top\", \"10px\", 3, \"src\"], [3, \"value\"]],\n    template: function AddItemComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ion-header\")(1, \"ion-toolbar\")(2, \"ion-buttons\", 0);\n        i0.ɵɵelement(3, \"ion-menu-button\");\n        i0.ɵɵelementStart(4, \"ion-title\");\n        i0.ɵɵtext(5, \"Agregar Item\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"ion-item\")(7, \"ion-button\", 1);\n        i0.ɵɵlistener(\"click\", function AddItemComponent_Template_ion_button_click_7_listener() {\n          return ctx.openCamera();\n        });\n        i0.ɵɵtext(8, \"Capturar Imagen\");\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵelementStart(9, \"ion-content\");\n        i0.ɵɵtemplate(10, AddItemComponent_div_10_Template, 4, 1, \"div\", 2);\n        i0.ɵɵelementStart(11, \"ion-item\")(12, \"ion-label\", 3);\n        i0.ɵɵtext(13, \"Selecciona un producto\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"ion-select\", 4);\n        i0.ɵɵlistener(\"ionChange\", function AddItemComponent_Template_ion_select_ionChange_14_listener($event) {\n          return ctx.onItemSelected($event);\n        });\n        i0.ɵɵtemplate(15, AddItemComponent_ion_select_option_15_Template, 2, 2, \"ion-select-option\", 5);\n        i0.ɵɵelementStart(16, \"ion-select-option\", 6);\n        i0.ɵɵtext(17, \"Otro (Agregar nuevo)\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵtemplate(18, AddItemComponent_ion_item_18_Template, 4, 1, \"ion-item\", 2);\n        i0.ɵɵelementStart(19, \"ion-item\")(20, \"ion-label\", 3);\n        i0.ɵɵtext(21, \"Cantidad\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"ion-input\", 7);\n        i0.ɵɵtwoWayListener(\"ngModelChange\", function AddItemComponent_Template_ion_input_ngModelChange_22_listener($event) {\n          i0.ɵɵtwoWayBindingSet(ctx.newItem.cantidad, $event) || (ctx.newItem.cantidad = $event);\n          return $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(23, \"ion-item\")(24, \"ion-label\");\n        i0.ɵɵtext(25, \"Unidad\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"ion-select\", 8);\n        i0.ɵɵtwoWayListener(\"ngModelChange\", function AddItemComponent_Template_ion_select_ngModelChange_26_listener($event) {\n          i0.ɵɵtwoWayBindingSet(ctx.newItem.unidadMedida, $event) || (ctx.newItem.unidadMedida = $event);\n          return $event;\n        });\n        i0.ɵɵelementStart(27, \"ion-select-option\", 9);\n        i0.ɵɵtext(28, \"Gramos\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(29, \"ion-select-option\", 10);\n        i0.ɵɵtext(30, \"ml\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(31, \"ion-select-option\", 11);\n        i0.ɵɵtext(32, \"Unidad\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(33, \"ion-item\")(34, \"ion-label\", 3);\n        i0.ɵɵtext(35, \"Fecha de Vencimiento\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(36, \"ion-datetime\", 12);\n        i0.ɵɵtwoWayListener(\"ngModelChange\", function AddItemComponent_Template_ion_datetime_ngModelChange_36_listener($event) {\n          i0.ɵɵtwoWayBindingSet(ctx.newItem.fechaVencimiento, $event) || (ctx.newItem.fechaVencimiento = $event);\n          return $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(37, \"ion-button\", 13);\n        i0.ɵɵlistener(\"click\", function AddItemComponent_Template_ion_button_click_37_listener() {\n          return ctx.addItem();\n        });\n        i0.ɵɵtext(38, \"Agregar \\u00CDtem\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"ngIf\", ctx.capturedImage);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngForOf\", ctx.availableItems);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.isNewItem);\n        i0.ɵɵadvance(4);\n        i0.ɵɵtwoWayProperty(\"ngModel\", ctx.newItem.cantidad);\n        i0.ɵɵadvance(4);\n        i0.ɵɵtwoWayProperty(\"ngModel\", ctx.newItem.unidadMedida);\n        i0.ɵɵadvance(10);\n        i0.ɵɵtwoWayProperty(\"ngModel\", ctx.newItem.fechaVencimiento);\n      }\n    },\n    dependencies: [i4.NgForOf, i4.NgIf, i5.IonButton, i5.IonButtons, i5.IonContent, i5.IonDatetime, i5.IonHeader, i5.IonInput, i5.IonItem, i5.IonLabel, i5.IonMenuButton, i5.IonSelect, i5.IonSelectOption, i5.IonTitle, i5.IonToolbar, i5.NumericValueAccessor, i5.SelectValueAccessor, i5.TextValueAccessor, i6.NgControlStatus, i6.NgModel]\n  });\n  return AddItemComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}